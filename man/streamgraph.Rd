% Generated by roxygen2 (4.1.0.9000): do not edit by hand
% Please edit documentation in R/streamgraph.R
\name{streamgraph}
\alias{streamgraph}
\title{Create a new streamgraph}
\usage{
streamgraph(data, key = "key", value = "value", date = "date",
  width = NULL, height = NULL, interactive = FALSE)
}
\arguments{
\item{data}{data frame}

\item{key}{name of the category column (defaults to \code{key})}

\item{value}{name of the value column (defaults to \code{value})}

\item{date}{name of the date column (defaults to \code{date})}

\item{width}{Width in pixels (optional, defaults to automatic sizing)}

\item{height}{Height in pixels (optional, defaults to automatic sizing)}

\item{interactive}{set to \code{TRUE} if you want an interactive streamgraph}
}
\value{
streamgraph object
}
\description{
\code{streamgraph()} initializes the streamgraph html widget
and takes a data frame in "long" format with columns for the
category (by default, it looks for \code{key}) and its associated
\code{date}  and \code{value}. You can supply the names for those
columns if they aren't named as such in your data.\cr
\cr
By default, interactivity is off, but you can enable that by setting
the \code{interactve} parameter to \code{TRUE}.
}
\examples{
\dontrun{
library(dplyr)
library(streamgraph)
ggplot2::movies \%>\%
select(year, Action, Animation, Comedy, Drama, Documentary, Romance, Short) \%>\%
  tidyr::gather(genre, value, -year) \%>\%
  group_by(year, genre) \%>\%
  tally() \%>\%
  ungroup \%>\%
  mutate(year=as.Date(sprintf("\%d-01-01", year))) -> dat

streamgraph(dat, "genre", "n", "year")
}
}

